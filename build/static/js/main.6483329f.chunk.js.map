{"version":3,"sources":["components/form/Form.module.css","components/contactsList/ContactsList.module.css","components/filter/Filter.module.css","components/section/Section.module.css","redux/phonebook/phoneBook.actions.js","redux/phonebook/phoneBook.reducer.js","redux/rootReducer.js","redux/store.js","redux/phonebook/phoneBook.operations.js","redux/phonebook/phoneBook.selectors.js","components/contactsList/ContactsList.js","components/filter/Filter.js","components/form/ContactForm.js","components/section/Section.js","App.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsFailure","addContactRequest","addContactSuccess","addContactFailure","filterContact","removeContactRequest","removeContactSuccess","removeContactFailure","itemsReducer","createReducer","_","action","payload","state","filter","item","id","filterReducer","loader","phoneBookReducer","combineReducers","items","loading","rootReducer","contacts","store","configureStore","reducer","axios","defaults","baseURL","getContactsSelector","filterSelector","getLoader","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","mapDispatchToProps","onDelete","dispatch","a","delete","connect","type","color","height","width","map","className","Styles","renderLi","number","btnLi","onClick","handleChange","evt","target","value","contactInput","placeholder","onChange","ContactForm","event","setState","onHandleSubmit","preventDefault","props","find","alert","addContact","reset","this","getContacts","form","onSubmit","inputSec","pattern","title","required","input","btn","Component","prototypes","PropTypes","func","isRequired","get","data","post","response","Section","children","defaultProps","App","ContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6483329f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__284L9\",\"btn\":\"Form_btn__FxeDH\",\"input\":\"Form_input__393T2\",\"inputSec\":\"Form_inputSec__ipzzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"renderLi\":\"ContactsList_renderLi__3LmRA\",\"btnLi\":\"ContactsList_btnLi__3WOjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInput\":\"Filter_contactInput__3OZLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__45vaC\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nexport const getContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nexport const getContactsFailure = createAction(\"contacts/fetchContactsFailure\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactFailure = createAction(\"contacts/addContactFailure\");\r\n\r\nexport const filterContact = createAction(\"contacts/filterÐ¡hange\");\r\n\r\nexport const removeContactRequest = createAction(\r\n  \"contacts/removeContactRequest\"\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  \"contacts/removeContactSuccess\"\r\n);\r\nexport const removeContactFailure = createAction(\r\n  \"contacts/removeContactFailure\"\r\n);\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getContactsSuccess,\r\n  addContactSuccess,\r\n  removeContactSuccess,\r\n  filterContact,\r\n  getContactsRequest,\r\n  getContactsFailure,\r\n  addContactRequest,\r\n  addContactFailure,\r\n  removeContactRequest,\r\n  removeContactFailure,\r\n} from \"./phoneBook.actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [getContactsSuccess]: (_, action) => [...action.payload],\r\n  [addContactSuccess]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [removeContactSuccess]: (state, action) => [\r\n    ...state.filter((item) => item.id !== action.payload),\r\n  ],\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nconst loader = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsFailure]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactFailure]: () => false,\r\n\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactFailure]: () => false,\r\n});\r\n\r\nconst phoneBookReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading: loader,\r\n});\r\n\r\nexport default phoneBookReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport phoneBookReducer from \"./phonebook/phoneBook.reducer.js\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phoneBookReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactFailure,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  getContactsFailure,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  removeContactFailure,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n} from \"./phoneBook.actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\nconst getContacts = () => async (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getContactsFailure(error));\r\n  }\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const contact = { name, number };\r\n    dispatch(addContactRequest());\r\n    try {\r\n      const response = await axios.post(\"/contacts\", contact);\r\n      dispatch(addContactSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(addContactFailure(error));\r\n    }\r\n  };\r\n\r\nconst removeContact = (id) => async (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(removeContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactFailure(error));\r\n  }\r\n};\r\n\r\nexport { getContacts, addContact, removeContact };\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getContactsSelector = (state) => state.contacts.items;\r\n\r\nconst filterSelector = (state) => state.contacts.filter;\r\n\r\nconst getLoader = (state) => state.contacts.loading;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContactsSelector, filterSelector],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport { getContactsSelector, filterSelector, getLoader, getFilteredContacts };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Styles from \"./ContactsList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { removeContact } from \"../../redux/phonebook/phoneBook.operations\";\r\nimport {\r\n  getFilteredContacts,\r\n  filterSelector,\r\n  getLoader,\r\n} from \"../../redux/phonebook/phoneBook.selectors\";\r\n\r\nconst ContactList = ({ contacts, onDelete, loading }) => {\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Loader type=\"ThreeDots\" color=\"#000\" height={50} width={50} />\r\n      )}\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id} className={Styles.renderLi}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              className={Styles.btnLi}\r\n              type=\"button\"\r\n              onClick={() => onDelete(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getFilteredContacts(state),\r\n    filter: filterSelector(state),\r\n    loading: getLoader(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { filterSelector } from \"../../redux/phonebook/phoneBook.selectors\";\r\nimport { filterContact } from \"../../redux/phonebook/phoneBook.actions\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        className={Styles.contactInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"ÐÐ¾Ð¸ÑÐº Ð¿Ð¾ Ð¸Ð¼ÐµÐ½Ð¸...\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: filterSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: (evt) => filterContact(evt.target.value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getContacts,\r\n  addContact,\r\n} from \"../../redux/phonebook/phoneBook.operations\";\r\nimport { getContactsSelector } from \"../../redux/phonebook/phoneBook.selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const contactFind = this.props.contacts.find(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    if (contactFind) {\r\n      alert(`ÐÐ¼Ñ ${this.state.name} Ð·Ð°Ð½ÑÑÐ¾ Ð²Ð²ÐµÐ´Ð¸ÑÐµ Ð´ÑÑÐ³Ð¾Ðµ Ð¸Ð¼Ñ!`);\r\n      return;\r\n    }\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={Styles.form}>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            <input\r\n              className={Styles.inputSec}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"ÐÐ¼Ñ:\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[A-ZA-ZÐ-Ð¯Ð-Ð¯]+(([' -][A-ZA-ZÐ-Ð¯Ð-Ð¯])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$\"\r\n              title=\"ÐÐ¼Ñ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð¸Ð· Ð±ÑÐºÐ², Ð°Ð¿Ð¾ÑÑÑÐ¾ÑÐ°, ÑÐ¸ÑÐµ Ð¸ Ð¿ÑÐ¾Ð±ÐµÐ»Ð¾Ð². ÐÐ°Ð¿ÑÐ¸Ð¼ÐµÑ Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan Ð¸ Ñ. Ð¿.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <input\r\n              className={Styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"Ð¢ÐµÐ»ÐµÑÐ¾Ð½:\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"ÐÐ¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð° Ð´Ð¾Ð»Ð¶ÐµÐ½ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¸ÑÑ Ð¸ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð°ÑÑ Ð¿ÑÐ¾Ð±ÐµÐ»Ñ, ÑÐ¸ÑÐµ, ÐºÑÑÐ³Ð»ÑÐµ ÑÐºÐ¾Ð±ÐºÐ¸ Ð¸ Ð¼Ð¾Ð¶ÐµÑ Ð½Ð°ÑÐ¸Ð½Ð°ÑÑÑÑ Ñ +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={Styles.btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.prototypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContactsSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = { getContacts, addContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport Styles from \"./Section.module.css\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <section>\r\n        <h2 className={Styles.title}>{title}</h2>\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nSection.defaultProps = {\r\n  title: \"\",\r\n  children: [],\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport ContactsList from \"./components/contactsList/ContactsList\";\r\nimport Filter from \"./components/filter/Filter\";\r\nimport ContactForm from \"./components/form/ContactForm\";\r\nimport Section from \"./components/section/Section\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Phonebook\"}>\r\n          <ContactForm />\r\n        </Section>\r\n        <Section title={\"Contacts\"}>\r\n          <Filter />\r\n          <ContactsList />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}